# some modification:
# 1:change conv_kernel_size from 2,3,4 to 3,4,5
# 2:add drop_out layer
# 3:add conv_output from 100 to 200

name: "TextNet"
layer {
  name: "input"
  type: "HDF5Data"
  top: "data"
  top: "label"
  hdf5_data_param {
    source: "train_path.txt"
    batch_size: 100
  }
  include: { phase: TRAIN }
}



layer {
  name: "input"
  type: "HDF5Data"
  top: "data"
  top: "label"
  hdf5_data_param {
    source: "test_path.txt"
    batch_size: 1
  }
  include: { phase: TEST }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
      num_output: 200     
      kernel_h: 3
	  kernel_w: 50
      stride: 1          
      weight_filler {
        type: "gaussian" 
        std: 0.01        
      }
      bias_filler {
        type: "constant" 
        value: 0
      }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "relu1"
}

layer {
  name: "conv11"
  type: "Convolution"
  bottom: "relu1"
  top: "conv11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
      num_output: 200     
      kernel_h: 3
	  kernel_w: 1
      stride: 1          
      weight_filler {
        type: "gaussian" 
        std: 0.01        
      }
      bias_filler {
        type: "constant" 
        value: 0
      }
  }
}

layer {
  name: "relu11"
  type: "ReLU"
  bottom: "conv11"
  top: "relu11"
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "data"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
      num_output: 200     
      kernel_h: 4
	  kernel_w: 50
      stride: 1          
      weight_filler {
        type: "gaussian" 
        std: 0.01        
      }
      bias_filler {
        type: "constant" 
        value: 0
      }
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "relu2"
}

layer {
  name: "conv22"
  type: "Convolution"
  bottom: "relu2"
  top: "conv22"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
      num_output: 200     
      kernel_h: 4
	  kernel_w: 1
      stride: 1          
      weight_filler {
        type: "gaussian" 
        std: 0.01        
      }
      bias_filler {
        type: "constant" 
        value: 0
      }
  }
}

layer {
  name: "relu22"
  type: "ReLU"
  bottom: "conv22"
  top: "relu22"
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "data"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
      num_output: 200     
      kernel_h: 5
	  kernel_w: 50
      stride: 1          
      weight_filler {
        type: "gaussian" 
        std: 0.01        
      }
      bias_filler {
        type: "constant" 
        value: 0
      }
  }
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "relu3"
}

layer {
  name: "conv33"
  type: "Convolution"
  bottom: "relu3"
  top: "conv33"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
      num_output: 200     
      kernel_h: 5
	  kernel_w: 1
      stride: 1          
      weight_filler {
        type: "gaussian" 
        std: 0.01        
      }
      bias_filler {
        type: "constant" 
        value: 0
      }
  }
}

layer {
  name: "relu33"
  type: "ReLU"
  bottom: "conv33"
  top: "relu33"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "relu11"
  top: "pool1"
  pooling_param {
	pool: MAX
	kernel_w: 1
	kernel_h: 496
  }
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "relu22"
  top: "pool2"
  pooling_param {
	pool: MAX
	kernel_w: 1
	kernel_h: 494
  }
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "relu33"
  top: "pool3"
  pooling_param {
	pool: MAX
	kernel_w: 1
	kernel_h: 492
  }
}

layer {
  name: "concat"
  bottom: "pool1"
  bottom: "pool2"
  bottom: "pool3"
  top: "concat"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

layer {
  name: "drop"
  bottom: "concat"
  top: "drop"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
	axis: 1
	weight_filler {
	  type: "gaussian"
	  std: 0.01
	}
	bias_filler {
	  type: "constant"
	  value: 0
	}
  }
  bottom: "drop"
  top: "fc"
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc"
  bottom: "label"
  top: "loss"
}
  

